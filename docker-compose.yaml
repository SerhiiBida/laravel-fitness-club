version: '3.7'

networks:
  app:

services:
  nginx:
    image: nginx:latest
    working_dir: "/var/www/app"
    ports:
      - "8080:80"
    volumes:
      - ./configs/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./sources/app:/var/www/app
    depends_on:
      - app
      - mysql
    networks:
      - app

  app:
    build:
      context: ./images
      dockerfile: php-fpm.dockerfile
    working_dir: "/var/www/app"
    volumes:
      - ./sources/app:/var/www/app
    depends_on:
      - mysql
      - redis
    networks:
      - app

  mysql:
    image: mysql:latest
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: secret
      MYSQL_USER: laravel
    ports:
      - "3306:3306"
    volumes:
      - ./volumes/mysql:/var/lib/mysql
    networks:
      - app

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    depends_on:
      - mysql
    ports:
      - "3310:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: root
    restart: always
    networks:
      - app

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - app

  composer:
    build:
      context: ./images
      dockerfile: php.dockerfile
    working_dir: "/var/www/app"
    volumes:
      - ./sources/app:/var/www/app
    entrypoint: ["composer"]
    networks:
      - app

  artisan:
    build:
      context: ./images
      dockerfile: php.dockerfile
    working_dir: "/var/www/app"
    volumes:
      - ./sources/app:/var/www/app
    entrypoint: ["php", "/var/www/app/artisan"]
    networks:
      - app
